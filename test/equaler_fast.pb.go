// Code generated by protoc-gen-go-fast. DO NOT EDIT.
// versions:
//  protoc-gen-go-fast v0.0.1
//  protoc             v3.15.8
// source: test/equaler.proto

package test

import (
	bytes "bytes"
	fmt "fmt"
	fastproto "github.com/billyplus/fastproto"
	protohelper "github.com/billyplus/fastproto/protohelper"
	protowire "google.golang.org/protobuf/encoding/protowire"
	proto "google.golang.org/protobuf/proto"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	math "math"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the packages it is being compiled against.
var _ = fmt.Errorf
var _ = math.MaxFloat32
var _ = protowire.MinValidNumber
var _ = protohelper.Skip
var _ = protoimpl.MinVersion

func (x *EqualProto) Equal(v2 proto.Message) bool {
	vv, ok := v2.(*EqualProto)
	if !ok ||
		x.VInt32 != vv.VInt32 ||
		x.VInt64 != vv.VInt64 ||
		x.VUint32 != vv.VUint32 ||
		x.VUint64 != vv.VUint64 ||
		x.VString != vv.VString ||
		len(x.VBytes) != len(vv.VBytes) ||
		x.VBool != vv.VBool ||
		x.SInt32 != vv.SInt32 ||
		x.SInt64 != vv.SInt64 ||
		x.Fixed32 != vv.Fixed32 ||
		x.Fixed64 != vv.Fixed64 ||
		x.Sfixed32 != vv.Sfixed32 ||
		x.Sfixed64 != vv.Sfixed64 ||
		len(x.ArrInt32) != len(vv.ArrInt32) ||
		len(x.ArrInt64) != len(vv.ArrInt64) ||
		len(x.ArrUint32) != len(vv.ArrUint32) ||
		len(x.ArrUint64) != len(vv.ArrUint64) ||
		len(x.ArrBool) != len(vv.ArrBool) ||
		len(x.ArrString) != len(vv.ArrString) ||
		len(x.ArrBytes) != len(vv.ArrBytes) ||
		len(x.MapInt32Bool) != len(vv.MapInt32Bool) ||
		len(x.MapInt32Int32) != len(vv.MapInt32Int32) ||
		len(x.MapInt32String) != len(vv.MapInt32String) ||
		len(x.MapInt64Bool) != len(vv.MapInt64Bool) ||
		len(x.MapInt64Int64) != len(vv.MapInt64Int64) ||
		len(x.MapInt64Bytes) != len(vv.MapInt64Bytes) ||
		len(x.MapSint32Sint64) != len(vv.MapSint32Sint64) ||
		len(x.MapSint64Sint32) != len(vv.MapSint64Sint32) ||
		len(x.MapFixed32Sfixed64) != len(vv.MapFixed32Sfixed64) ||
		len(x.MapSfixed32Fixed64) != len(vv.MapSfixed32Fixed64) ||
		len(x.MapStringBool) != len(vv.MapStringBool) ||
		len(x.MapStringInt32) != len(vv.MapStringInt32) ||
		len(x.MapStringInt64) != len(vv.MapStringInt64) ||
		len(x.MapStringSint64) != len(vv.MapStringSint64) ||
		len(x.MapStringSfixed64) != len(vv.MapStringSfixed64) ||
		len(x.MapStringString) != len(vv.MapStringString) ||
		len(x.MapStringEnum) != len(vv.MapStringEnum) ||
		len(x.ArrActor) != len(vv.ArrActor) ||
		len(x.MapStringActor) != len(vv.MapStringActor) ||
		len(x.MapInt32Actor) != len(vv.MapInt32Actor) ||
		len(x.MapInt64Actor) != len(vv.MapInt64Actor) ||
		len(x.Nofasts) != len(vv.Nofasts) {
		return false
	}
	if true ||
		!bytes.Equal(x.VBytes, vv.VBytes) ||
		!protohelper.EqualSlice(x.ArrInt32, vv.ArrInt32) ||
		!protohelper.EqualSlice(x.ArrInt64, vv.ArrInt64) ||
		!protohelper.EqualSlice(x.ArrUint32, vv.ArrUint32) ||
		!protohelper.EqualSlice(x.ArrUint64, vv.ArrUint64) ||
		!protohelper.EqualSlice(x.ArrBool, vv.ArrBool) ||
		!protohelper.EqualSlice(x.ArrString, vv.ArrString) ||
		!protohelper.EqualBytesSlice(x.ArrBytes, vv.ArrBytes) ||
		!protohelper.EqualMap(x.MapInt32Bool, vv.MapInt32Bool) ||
		!protohelper.EqualMap(x.MapInt32Int32, vv.MapInt32Int32) ||
		!protohelper.EqualMap(x.MapInt32String, vv.MapInt32String) ||
		!protohelper.EqualMap(x.MapInt64Bool, vv.MapInt64Bool) ||
		!protohelper.EqualMap(x.MapInt64Int64, vv.MapInt64Int64) ||
		!protohelper.EqualBytesMap(x.MapInt64Bytes, vv.MapInt64Bytes) ||
		!protohelper.EqualMap(x.MapSint32Sint64, vv.MapSint32Sint64) ||
		!protohelper.EqualMap(x.MapSint64Sint32, vv.MapSint64Sint32) ||
		!protohelper.EqualMap(x.MapFixed32Sfixed64, vv.MapFixed32Sfixed64) ||
		!protohelper.EqualMap(x.MapSfixed32Fixed64, vv.MapSfixed32Fixed64) ||
		!protohelper.EqualMap(x.MapStringBool, vv.MapStringBool) ||
		!protohelper.EqualMap(x.MapStringInt32, vv.MapStringInt32) ||
		!protohelper.EqualMap(x.MapStringInt64, vv.MapStringInt64) ||
		!protohelper.EqualMap(x.MapStringSint64, vv.MapStringSint64) ||
		!protohelper.EqualMap(x.MapStringSfixed64, vv.MapStringSfixed64) ||
		!protohelper.EqualMap(x.MapStringString, vv.MapStringString) ||
		!protohelper.EqualMap(x.MapStringEnum, vv.MapStringEnum) ||
		!fastproto.Equal(x.MActor, vv.MActor) ||
		!protohelper.EqualProtoSlice(x.ArrActor, vv.ArrActor) ||
		!protohelper.EqualProtoMap(x.MapStringActor, vv.MapStringActor) ||
		!protohelper.EqualProtoMap(x.MapInt32Actor, vv.MapInt32Actor) ||
		!protohelper.EqualProtoMap(x.MapInt64Actor, vv.MapInt64Actor) ||
		!fastproto.Equal(x.Outer, vv.Outer) ||
		!fastproto.Equal(x.Nofase, vv.Nofase) ||
		!protohelper.EqualProtoSlice(x.Nofasts, vv.Nofasts) ||
		!fastproto.Equal(x.LastUpdated, vv.LastUpdated) {
		return false
	}
	return true
}
