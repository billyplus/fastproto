syntax = "proto3";

package test;
option go_package = "github.com/billyplus/fastproto/test";

import "test/outer.proto";
import "test/nofast.proto";
import "google/protobuf/timestamp.proto";
// import "google/protobuf/any.proto";
// message which is empty
message EmptyMsg {}

// full proto
message FullProto {
  //
  int32 v_int32 = 1;
  int64 v_int64 = 2;
  uint32 v_uint32 = 3;
  uint64 v_uint64 = 4;
  string v_string = 5;
  bytes v_bytes = 20;
  bool v_bool = 6;
  //
  sint32 s_int32 = 7;
  sint64 s_int64 = 8;
  fixed32 fixed32 = 9;
  fixed64 fixed64 = 10;
  sfixed32 sfixed32 = 11;
  sfixed64 sfixed64 = 12;
  //
  repeated int32 arr_int32 = 41;
  repeated int64 arr_int64 = 42;
  repeated uint32 arr_uint32 = 43;
  repeated uint64 arr_uint64 = 44;
  repeated bool arr_bool = 45;
  repeated string arr_string = 46;
  repeated bytes arr_bytes = 47;

  //
  map<int32, bool> map_int32_bool = 81;
  map<int32, int32> map_int32_int32 = 82;
  map<int32, string> map_int32_string = 83;
  map<int64, bool> map_int64_bool = 101;
  map<int64, int64> map_int64_int64 = 102;
  map<int64, bytes> map_int64_bytes = 103;
  map<sint32, sint64> map_sint32_sint64 = 121;
  map<sint64, sint32> map_sint64_sint32 = 141;
  map<fixed32, sfixed64> map_fixed32_sfixed64 = 161;
  map<sfixed32, fixed64> map_sfixed32_fixed64 = 181;
  map<string, bool> map_string_bool = 201;
  map<string, int32> map_string_int32 = 202;
  map<string, int64> map_string_int64 = 203;
  map<string, sint64> map_string_sint64 = 204;
  map<string, sfixed64> map_string_sfixed64 = 205;
  map<string, string> map_string_string = 206;
  map<string, TestEnum> map_string_enum = 207;
  //

  OtherMessage m_actor = 231;

  repeated OtherMessage arr_actor = 232;

  map<string, OtherMessage> map_string_actor = 233;
  map<int32, OtherMessage> map_int32_actor = 234;
  map<int64, OtherMessage> map_int64_actor = 235;

  pb.OuterMsg outer = 281;
}

// other message
message OtherMessage {
  //
  int64 eid = 1;
  //
  string open_id = 2;
  //
  string name = 3;
  // job
  int32 job = 4;
  // sex
  int32 sex = 5;
}

message WithStandardMessage {
  uint64 id = 1;
  pb.NoFastMessage nofast = 2;
  repeated pb.NoFastMessage nofasts = 3;
  google.protobuf.Timestamp last_updated = 4;
}

// test enum
enum TestEnum {
  Test_None = 0;
  Test_Push = 1;
  Test_Cmd = 2;
  Test_Max = 3;
}

message float { float val = 1; }
message double { double val = 1; }
message int32 { int32 val = 1; }
message int64 { int64 val = 1; }
message sint32 { sint32 val = 1; }
message sint64 { sint64 val = 1; }
message uint32 { uint32 val = 1; }
message uint64 { uint64 val = 1; }
message fixed32 { fixed32 val = 1; }
message fixed64 { fixed64 val = 1; }
message sfixed32 { sfixed32 val = 1; }
message sfixed64 { sfixed64 val = 1; }
message bool { bool val = 1; }
message string { string val = 1; }
message bytes { bytes val = 1; }
message TestProtoMsg {
  OtherMessage val = 1;
  TestEnum val2 = 2;
}

message floats { repeated float val = 1; }
message doubles { repeated double val = 1; }
message int32s { repeated int32 val = 1; }
message int64s { repeated int64 val = 1; }
message sint32s { repeated sint32 val = 1; }
message sint64s { repeated sint64 val = 1; }
message uint32s { repeated uint32 val = 1; }
message uint64s { repeated uint64 val = 1; }
message fixed32s { repeated fixed32 val = 1; }
message fixed64s { repeated fixed64 val = 1; }
message sfixed32s { repeated sfixed32 val = 1; }
message sfixed64s { repeated sfixed64 val = 1; }
message bools { repeated bool val = 1; }
message strings { repeated string val = 1; }
message bytess { repeated bytes val = 1; }
message TestProtoMsgs { repeated OtherMessage val = 1; }
message TestEnums { repeated TestEnum val = 1; }

message mapint32fixed64 { map<int32, fixed64> val = 1; }
message mapint64fixed32 { map<int64, fixed32> val = 1; }
message mapuint32sint64 { map<uint32, sint64> val = 1; }
message mapuint64sint32 { map<uint64, sint32> val = 1; }
message mapSint32Int64 { map<sint32, int64> val = 1; }
message mapSint64Int32 { map<sint64, int32> val = 1; }
message mapFixed32Double { map<fixed32, double> val = 1; }
message mapFixed64Float { map<fixed64, float> val = 1; }
message mapsfixed64uint32 { map<sfixed64, uint32> val = 1; }
message mapsfixed32uint64 { map<sfixed32, uint64> val = 1; }
message mapstringsfixed32 { map<string, sfixed32> val = 1; }
message mapstringsfixed64 { map<string, sfixed64> val = 1; }
message mapint64string { map<int64, string> val = 1; }
message mapint64bytes { map<int64, bytes> val = 1; }
message mapint64bool { map<int64, bool> val = 1; }
message mapBoolInt64 { map<bool, int64> val = 1; }
message mapint64TestProtoMsg { map<int64, OtherMessage> val = 1; }

// message mapint111TestProtoMsg { map<bool, OtherMessage> val = 1; }
