// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: test/equaler.proto

package test

import (
	_ "github.com/billyplus/fastproto/options"
	pb "github.com/billyplus/fastproto/test/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EqualProto struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	VInt32  int32  `protobuf:"varint,1,opt,name=v_int32,json=vInt32,proto3" json:"v_int32,omitempty"`
	VInt64  int64  `protobuf:"varint,2,opt,name=v_int64,json=vInt64,proto3" json:"v_int64,omitempty"`
	VUint32 uint32 `protobuf:"varint,3,opt,name=v_uint32,json=vUint32,proto3" json:"v_uint32,omitempty"`
	VUint64 uint64 `protobuf:"varint,4,opt,name=v_uint64,json=vUint64,proto3" json:"v_uint64,omitempty"`
	VString string `protobuf:"bytes,5,opt,name=v_string,json=vString,proto3" json:"v_string,omitempty"`
	VBytes  []byte `protobuf:"bytes,20,opt,name=v_bytes,json=vBytes,proto3" json:"v_bytes,omitempty"`
	VBool   bool   `protobuf:"varint,6,opt,name=v_bool,json=vBool,proto3" json:"v_bool,omitempty"`
	SInt32   int32  `protobuf:"zigzag32,7,opt,name=s_int32,json=sInt32,proto3" json:"s_int32,omitempty"`
	SInt64   int64  `protobuf:"zigzag64,8,opt,name=s_int64,json=sInt64,proto3" json:"s_int64,omitempty"`
	Fixed32  uint32 `protobuf:"fixed32,9,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  uint64 `protobuf:"fixed64,10,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 int32  `protobuf:"fixed32,11,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 int64  `protobuf:"fixed64,12,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	ArrInt32  []int32  `protobuf:"varint,41,rep,packed,name=arr_int32,json=arrInt32,proto3" json:"arr_int32,omitempty"`
	ArrInt64  []int64  `protobuf:"varint,42,rep,packed,name=arr_int64,json=arrInt64,proto3" json:"arr_int64,omitempty"`
	ArrUint32 []uint32 `protobuf:"varint,43,rep,packed,name=arr_uint32,json=arrUint32,proto3" json:"arr_uint32,omitempty"`
	ArrUint64 []uint64 `protobuf:"varint,44,rep,packed,name=arr_uint64,json=arrUint64,proto3" json:"arr_uint64,omitempty"`
	ArrBool   []bool   `protobuf:"varint,45,rep,packed,name=arr_bool,json=arrBool,proto3" json:"arr_bool,omitempty"`
	ArrString []string `protobuf:"bytes,46,rep,name=arr_string,json=arrString,proto3" json:"arr_string,omitempty"`
	ArrBytes  [][]byte `protobuf:"bytes,47,rep,name=arr_bytes,json=arrBytes,proto3" json:"arr_bytes,omitempty"`
	MapInt32Bool       map[int32]bool           `protobuf:"bytes,81,rep,name=map_int32_bool,json=mapInt32Bool,proto3" json:"map_int32_bool,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapInt32Int32      map[int32]int32          `protobuf:"bytes,82,rep,name=map_int32_int32,json=mapInt32Int32,proto3" json:"map_int32_int32,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapInt32String     map[int32]string         `protobuf:"bytes,83,rep,name=map_int32_string,json=mapInt32String,proto3" json:"map_int32_string,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapInt64Bool       map[int64]bool           `protobuf:"bytes,101,rep,name=map_int64_bool,json=mapInt64Bool,proto3" json:"map_int64_bool,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapInt64Int64      map[int64]int64          `protobuf:"bytes,102,rep,name=map_int64_int64,json=mapInt64Int64,proto3" json:"map_int64_int64,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapInt64Bytes      map[int64][]byte         `protobuf:"bytes,103,rep,name=map_int64_bytes,json=mapInt64Bytes,proto3" json:"map_int64_bytes,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapSint32Sint64    map[int32]int64          `protobuf:"bytes,121,rep,name=map_sint32_sint64,json=mapSint32Sint64,proto3" json:"map_sint32_sint64,omitempty" protobuf_key:"zigzag32,1,opt,name=key" protobuf_val:"zigzag64,2,opt,name=value"`
	MapSint64Sint32    map[int64]int32          `protobuf:"bytes,141,rep,name=map_sint64_sint32,json=mapSint64Sint32,proto3" json:"map_sint64_sint32,omitempty" protobuf_key:"zigzag64,1,opt,name=key" protobuf_val:"zigzag32,2,opt,name=value"`
	MapFixed32Sfixed64 map[uint32]int64         `protobuf:"bytes,161,rep,name=map_fixed32_sfixed64,json=mapFixed32Sfixed64,proto3" json:"map_fixed32_sfixed64,omitempty" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	MapSfixed32Fixed64 map[int32]uint64         `protobuf:"bytes,181,rep,name=map_sfixed32_fixed64,json=mapSfixed32Fixed64,proto3" json:"map_sfixed32_fixed64,omitempty" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	MapStringBool      map[string]bool          `protobuf:"bytes,201,rep,name=map_string_bool,json=mapStringBool,proto3" json:"map_string_bool,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapStringInt32     map[string]int32         `protobuf:"bytes,202,rep,name=map_string_int32,json=mapStringInt32,proto3" json:"map_string_int32,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapStringInt64     map[string]int64         `protobuf:"bytes,203,rep,name=map_string_int64,json=mapStringInt64,proto3" json:"map_string_int64,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapStringSint64    map[string]int64         `protobuf:"bytes,204,rep,name=map_string_sint64,json=mapStringSint64,proto3" json:"map_string_sint64,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"zigzag64,2,opt,name=value"`
	MapStringSfixed64  map[string]int64         `protobuf:"bytes,205,rep,name=map_string_sfixed64,json=mapStringSfixed64,proto3" json:"map_string_sfixed64,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	MapStringString    map[string]string        `protobuf:"bytes,206,rep,name=map_string_string,json=mapStringString,proto3" json:"map_string_string,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapStringEnum      map[string]TestEnum      `protobuf:"bytes,207,rep,name=map_string_enum,json=mapStringEnum,proto3" json:"map_string_enum,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=test.TestEnum"` //
	MActor             *OtherMessage            `protobuf:"bytes,231,opt,name=m_actor,json=mActor,proto3" json:"m_actor,omitempty"`
	ArrActor           []*OtherMessage          `protobuf:"bytes,232,rep,name=arr_actor,json=arrActor,proto3" json:"arr_actor,omitempty"`
	MapStringActor     map[string]*OtherMessage `protobuf:"bytes,233,rep,name=map_string_actor,json=mapStringActor,proto3" json:"map_string_actor,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapInt32Actor      map[int32]*OtherMessage  `protobuf:"bytes,234,rep,name=map_int32_actor,json=mapInt32Actor,proto3" json:"map_int32_actor,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapInt64Actor      map[int64]*OtherMessage  `protobuf:"bytes,235,rep,name=map_int64_actor,json=mapInt64Actor,proto3" json:"map_int64_actor,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Outer              *pb.OuterMsg             `protobuf:"bytes,281,opt,name=outer,proto3" json:"outer,omitempty"`
	Nofase             *pb.NoFastMessage        `protobuf:"bytes,282,opt,name=nofase,proto3" json:"nofase,omitempty"`
	Nofasts            []*pb.NoFastMessage      `protobuf:"bytes,283,rep,name=nofasts,proto3" json:"nofasts,omitempty"`
	LastUpdated        *timestamppb.Timestamp   `protobuf:"bytes,284,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EqualProto) Reset() {
	*x = EqualProto{}
	mi := &file_test_equaler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EqualProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EqualProto) ProtoMessage() {}

func (x *EqualProto) ProtoReflect() protoreflect.Message {
	mi := &file_test_equaler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EqualProto.ProtoReflect.Descriptor instead.
func (*EqualProto) Descriptor() ([]byte, []int) {
	return file_test_equaler_proto_rawDescGZIP(), []int{0}
}

func (x *EqualProto) GetVInt32() int32 {
	if x != nil {
		return x.VInt32
	}
	return 0
}

func (x *EqualProto) GetVInt64() int64 {
	if x != nil {
		return x.VInt64
	}
	return 0
}

func (x *EqualProto) GetVUint32() uint32 {
	if x != nil {
		return x.VUint32
	}
	return 0
}

func (x *EqualProto) GetVUint64() uint64 {
	if x != nil {
		return x.VUint64
	}
	return 0
}

func (x *EqualProto) GetVString() string {
	if x != nil {
		return x.VString
	}
	return ""
}

func (x *EqualProto) GetVBytes() []byte {
	if x != nil {
		return x.VBytes
	}
	return nil
}

func (x *EqualProto) GetVBool() bool {
	if x != nil {
		return x.VBool
	}
	return false
}

func (x *EqualProto) GetSInt32() int32 {
	if x != nil {
		return x.SInt32
	}
	return 0
}

func (x *EqualProto) GetSInt64() int64 {
	if x != nil {
		return x.SInt64
	}
	return 0
}

func (x *EqualProto) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *EqualProto) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *EqualProto) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *EqualProto) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *EqualProto) GetArrInt32() []int32 {
	if x != nil {
		return x.ArrInt32
	}
	return nil
}

func (x *EqualProto) GetArrInt64() []int64 {
	if x != nil {
		return x.ArrInt64
	}
	return nil
}

func (x *EqualProto) GetArrUint32() []uint32 {
	if x != nil {
		return x.ArrUint32
	}
	return nil
}

func (x *EqualProto) GetArrUint64() []uint64 {
	if x != nil {
		return x.ArrUint64
	}
	return nil
}

func (x *EqualProto) GetArrBool() []bool {
	if x != nil {
		return x.ArrBool
	}
	return nil
}

func (x *EqualProto) GetArrString() []string {
	if x != nil {
		return x.ArrString
	}
	return nil
}

func (x *EqualProto) GetArrBytes() [][]byte {
	if x != nil {
		return x.ArrBytes
	}
	return nil
}

func (x *EqualProto) GetMapInt32Bool() map[int32]bool {
	if x != nil {
		return x.MapInt32Bool
	}
	return nil
}

func (x *EqualProto) GetMapInt32Int32() map[int32]int32 {
	if x != nil {
		return x.MapInt32Int32
	}
	return nil
}

func (x *EqualProto) GetMapInt32String() map[int32]string {
	if x != nil {
		return x.MapInt32String
	}
	return nil
}

func (x *EqualProto) GetMapInt64Bool() map[int64]bool {
	if x != nil {
		return x.MapInt64Bool
	}
	return nil
}

func (x *EqualProto) GetMapInt64Int64() map[int64]int64 {
	if x != nil {
		return x.MapInt64Int64
	}
	return nil
}

func (x *EqualProto) GetMapInt64Bytes() map[int64][]byte {
	if x != nil {
		return x.MapInt64Bytes
	}
	return nil
}

func (x *EqualProto) GetMapSint32Sint64() map[int32]int64 {
	if x != nil {
		return x.MapSint32Sint64
	}
	return nil
}

func (x *EqualProto) GetMapSint64Sint32() map[int64]int32 {
	if x != nil {
		return x.MapSint64Sint32
	}
	return nil
}

func (x *EqualProto) GetMapFixed32Sfixed64() map[uint32]int64 {
	if x != nil {
		return x.MapFixed32Sfixed64
	}
	return nil
}

func (x *EqualProto) GetMapSfixed32Fixed64() map[int32]uint64 {
	if x != nil {
		return x.MapSfixed32Fixed64
	}
	return nil
}

func (x *EqualProto) GetMapStringBool() map[string]bool {
	if x != nil {
		return x.MapStringBool
	}
	return nil
}

func (x *EqualProto) GetMapStringInt32() map[string]int32 {
	if x != nil {
		return x.MapStringInt32
	}
	return nil
}

func (x *EqualProto) GetMapStringInt64() map[string]int64 {
	if x != nil {
		return x.MapStringInt64
	}
	return nil
}

func (x *EqualProto) GetMapStringSint64() map[string]int64 {
	if x != nil {
		return x.MapStringSint64
	}
	return nil
}

func (x *EqualProto) GetMapStringSfixed64() map[string]int64 {
	if x != nil {
		return x.MapStringSfixed64
	}
	return nil
}

func (x *EqualProto) GetMapStringString() map[string]string {
	if x != nil {
		return x.MapStringString
	}
	return nil
}

func (x *EqualProto) GetMapStringEnum() map[string]TestEnum {
	if x != nil {
		return x.MapStringEnum
	}
	return nil
}

func (x *EqualProto) GetMActor() *OtherMessage {
	if x != nil {
		return x.MActor
	}
	return nil
}

func (x *EqualProto) GetArrActor() []*OtherMessage {
	if x != nil {
		return x.ArrActor
	}
	return nil
}

func (x *EqualProto) GetMapStringActor() map[string]*OtherMessage {
	if x != nil {
		return x.MapStringActor
	}
	return nil
}

func (x *EqualProto) GetMapInt32Actor() map[int32]*OtherMessage {
	if x != nil {
		return x.MapInt32Actor
	}
	return nil
}

func (x *EqualProto) GetMapInt64Actor() map[int64]*OtherMessage {
	if x != nil {
		return x.MapInt64Actor
	}
	return nil
}

func (x *EqualProto) GetOuter() *pb.OuterMsg {
	if x != nil {
		return x.Outer
	}
	return nil
}

func (x *EqualProto) GetNofase() *pb.NoFastMessage {
	if x != nil {
		return x.Nofase
	}
	return nil
}

func (x *EqualProto) GetNofasts() []*pb.NoFastMessage {
	if x != nil {
		return x.Nofasts
	}
	return nil
}

func (x *EqualProto) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

var File_test_equaler_proto protoreflect.FileDescriptor

const file_test_equaler_proto_rawDesc = "" +
	"\n" +
	"\x12test/equaler.proto\x12\x04test\x1a\x10test/outer.proto\x1a\x0etest/msg.proto\x1a\x11test/nofast.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x15options/options.proto\"\xb0\x1e\n" +
	"\n" +
	"EqualProto\x12\x17\n" +
	"\av_int32\x18\x01 \x01(\x05R\x06vInt32\x12\x17\n" +
	"\av_int64\x18\x02 \x01(\x03R\x06vInt64\x12\x19\n" +
	"\bv_uint32\x18\x03 \x01(\rR\avUint32\x12\x19\n" +
	"\bv_uint64\x18\x04 \x01(\x04R\avUint64\x12\x19\n" +
	"\bv_string\x18\x05 \x01(\tR\avString\x12\x17\n" +
	"\av_bytes\x18\x14 \x01(\fR\x06vBytes\x12\x15\n" +
	"\x06v_bool\x18\x06 \x01(\bR\x05vBool\x12\x17\n" +
	"\as_int32\x18\a \x01(\x11R\x06sInt32\x12\x17\n" +
	"\as_int64\x18\b \x01(\x12R\x06sInt64\x12\x18\n" +
	"\afixed32\x18\t \x01(\aR\afixed32\x12\x18\n" +
	"\afixed64\x18\n" +
	" \x01(\x06R\afixed64\x12\x1a\n" +
	"\bsfixed32\x18\v \x01(\x0fR\bsfixed32\x12\x1a\n" +
	"\bsfixed64\x18\f \x01(\x10R\bsfixed64\x12\x1b\n" +
	"\tarr_int32\x18) \x03(\x05R\barrInt32\x12\x1b\n" +
	"\tarr_int64\x18* \x03(\x03R\barrInt64\x12\x1d\n" +
	"\n" +
	"arr_uint32\x18+ \x03(\rR\tarrUint32\x12\x1d\n" +
	"\n" +
	"arr_uint64\x18, \x03(\x04R\tarrUint64\x12\x19\n" +
	"\barr_bool\x18- \x03(\bR\aarrBool\x12\x1d\n" +
	"\n" +
	"arr_string\x18. \x03(\tR\tarrString\x12\x1b\n" +
	"\tarr_bytes\x18/ \x03(\fR\barrBytes\x12H\n" +
	"\x0emap_int32_bool\x18Q \x03(\v2\".test.EqualProto.MapInt32BoolEntryR\fmapInt32Bool\x12K\n" +
	"\x0fmap_int32_int32\x18R \x03(\v2#.test.EqualProto.MapInt32Int32EntryR\rmapInt32Int32\x12N\n" +
	"\x10map_int32_string\x18S \x03(\v2$.test.EqualProto.MapInt32StringEntryR\x0emapInt32String\x12H\n" +
	"\x0emap_int64_bool\x18e \x03(\v2\".test.EqualProto.MapInt64BoolEntryR\fmapInt64Bool\x12K\n" +
	"\x0fmap_int64_int64\x18f \x03(\v2#.test.EqualProto.MapInt64Int64EntryR\rmapInt64Int64\x12K\n" +
	"\x0fmap_int64_bytes\x18g \x03(\v2#.test.EqualProto.MapInt64BytesEntryR\rmapInt64Bytes\x12Q\n" +
	"\x11map_sint32_sint64\x18y \x03(\v2%.test.EqualProto.MapSint32Sint64EntryR\x0fmapSint32Sint64\x12R\n" +
	"\x11map_sint64_sint32\x18\x8d\x01 \x03(\v2%.test.EqualProto.MapSint64Sint32EntryR\x0fmapSint64Sint32\x12[\n" +
	"\x14map_fixed32_sfixed64\x18\xa1\x01 \x03(\v2(.test.EqualProto.MapFixed32Sfixed64EntryR\x12mapFixed32Sfixed64\x12[\n" +
	"\x14map_sfixed32_fixed64\x18\xb5\x01 \x03(\v2(.test.EqualProto.MapSfixed32Fixed64EntryR\x12mapSfixed32Fixed64\x12L\n" +
	"\x0fmap_string_bool\x18\xc9\x01 \x03(\v2#.test.EqualProto.MapStringBoolEntryR\rmapStringBool\x12O\n" +
	"\x10map_string_int32\x18\xca\x01 \x03(\v2$.test.EqualProto.MapStringInt32EntryR\x0emapStringInt32\x12O\n" +
	"\x10map_string_int64\x18\xcb\x01 \x03(\v2$.test.EqualProto.MapStringInt64EntryR\x0emapStringInt64\x12R\n" +
	"\x11map_string_sint64\x18\xcc\x01 \x03(\v2%.test.EqualProto.MapStringSint64EntryR\x0fmapStringSint64\x12X\n" +
	"\x13map_string_sfixed64\x18\xcd\x01 \x03(\v2'.test.EqualProto.MapStringSfixed64EntryR\x11mapStringSfixed64\x12R\n" +
	"\x11map_string_string\x18\xce\x01 \x03(\v2%.test.EqualProto.MapStringStringEntryR\x0fmapStringString\x12L\n" +
	"\x0fmap_string_enum\x18\xcf\x01 \x03(\v2#.test.EqualProto.MapStringEnumEntryR\rmapStringEnum\x12,\n" +
	"\am_actor\x18\xe7\x01 \x01(\v2\x12.test.OtherMessageR\x06mActor\x120\n" +
	"\tarr_actor\x18\xe8\x01 \x03(\v2\x12.test.OtherMessageR\barrActor\x12O\n" +
	"\x10map_string_actor\x18\xe9\x01 \x03(\v2$.test.EqualProto.MapStringActorEntryR\x0emapStringActor\x12L\n" +
	"\x0fmap_int32_actor\x18\xea\x01 \x03(\v2#.test.EqualProto.MapInt32ActorEntryR\rmapInt32Actor\x12L\n" +
	"\x0fmap_int64_actor\x18\xeb\x01 \x03(\v2#.test.EqualProto.MapInt64ActorEntryR\rmapInt64Actor\x12#\n" +
	"\x05outer\x18\x99\x02 \x01(\v2\f.pb.OuterMsgR\x05outer\x12*\n" +
	"\x06nofase\x18\x9a\x02 \x01(\v2\x11.pb.NoFastMessageR\x06nofase\x12,\n" +
	"\anofasts\x18\x9b\x02 \x03(\v2\x11.pb.NoFastMessageR\anofasts\x12>\n" +
	"\flast_updated\x18\x9c\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x1a?\n" +
	"\x11MapInt32BoolEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a@\n" +
	"\x12MapInt32Int32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aA\n" +
	"\x13MapInt32StringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a?\n" +
	"\x11MapInt64BoolEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a@\n" +
	"\x12MapInt64Int64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a@\n" +
	"\x12MapInt64BytesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1aB\n" +
	"\x14MapSint32Sint64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x11R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x12R\x05value:\x028\x01\x1aB\n" +
	"\x14MapSint64Sint32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x12R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x11R\x05value:\x028\x01\x1aE\n" +
	"\x17MapFixed32Sfixed64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\aR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x10R\x05value:\x028\x01\x1aE\n" +
	"\x17MapSfixed32Fixed64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x0fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x06R\x05value:\x028\x01\x1a@\n" +
	"\x12MapStringBoolEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1aA\n" +
	"\x13MapStringInt32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aA\n" +
	"\x13MapStringInt64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aB\n" +
	"\x14MapStringSint64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x12R\x05value:\x028\x01\x1aD\n" +
	"\x16MapStringSfixed64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x10R\x05value:\x028\x01\x1aB\n" +
	"\x14MapStringStringEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aP\n" +
	"\x12MapStringEnumEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12$\n" +
	"\x05value\x18\x02 \x01(\x0e2\x0e.test.TestEnumR\x05value:\x028\x01\x1aU\n" +
	"\x13MapStringActorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.test.OtherMessageR\x05value:\x028\x01\x1aT\n" +
	"\x12MapInt32ActorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.test.OtherMessageR\x05value:\x028\x01\x1aT\n" +
	"\x12MapInt64ActorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.test.OtherMessageR\x05value:\x028\x01B1\x90\xac\x1b\x01\xa0\xac\x1b\x01\xb0\xac\x1b\x01Z#github.com/billyplus/fastproto/testb\x06proto3"

var (
	file_test_equaler_proto_rawDescOnce sync.Once
	file_test_equaler_proto_rawDescData []byte
)

func file_test_equaler_proto_rawDescGZIP() []byte {
	file_test_equaler_proto_rawDescOnce.Do(func() {
		file_test_equaler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_test_equaler_proto_rawDesc), len(file_test_equaler_proto_rawDesc)))
	})
	return file_test_equaler_proto_rawDescData
}

var file_test_equaler_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_test_equaler_proto_goTypes = []any{
	(*EqualProto)(nil),            // 0: test.EqualProto
	nil,                           // 1: test.EqualProto.MapInt32BoolEntry
	nil,                           // 2: test.EqualProto.MapInt32Int32Entry
	nil,                           // 3: test.EqualProto.MapInt32StringEntry
	nil,                           // 4: test.EqualProto.MapInt64BoolEntry
	nil,                           // 5: test.EqualProto.MapInt64Int64Entry
	nil,                           // 6: test.EqualProto.MapInt64BytesEntry
	nil,                           // 7: test.EqualProto.MapSint32Sint64Entry
	nil,                           // 8: test.EqualProto.MapSint64Sint32Entry
	nil,                           // 9: test.EqualProto.MapFixed32Sfixed64Entry
	nil,                           // 10: test.EqualProto.MapSfixed32Fixed64Entry
	nil,                           // 11: test.EqualProto.MapStringBoolEntry
	nil,                           // 12: test.EqualProto.MapStringInt32Entry
	nil,                           // 13: test.EqualProto.MapStringInt64Entry
	nil,                           // 14: test.EqualProto.MapStringSint64Entry
	nil,                           // 15: test.EqualProto.MapStringSfixed64Entry
	nil,                           // 16: test.EqualProto.MapStringStringEntry
	nil,                           // 17: test.EqualProto.MapStringEnumEntry
	nil,                           // 18: test.EqualProto.MapStringActorEntry
	nil,                           // 19: test.EqualProto.MapInt32ActorEntry
	nil,                           // 20: test.EqualProto.MapInt64ActorEntry
	(*OtherMessage)(nil),          // 21: test.OtherMessage
	(*pb.OuterMsg)(nil),           // 22: pb.OuterMsg
	(*pb.NoFastMessage)(nil),      // 23: pb.NoFastMessage
	(*timestamppb.Timestamp)(nil), // 24: google.protobuf.Timestamp
	(TestEnum)(0),                 // 25: test.TestEnum
}
var file_test_equaler_proto_depIdxs = []int32{
	1,  // 0: test.EqualProto.map_int32_bool:type_name -> test.EqualProto.MapInt32BoolEntry
	2,  // 1: test.EqualProto.map_int32_int32:type_name -> test.EqualProto.MapInt32Int32Entry
	3,  // 2: test.EqualProto.map_int32_string:type_name -> test.EqualProto.MapInt32StringEntry
	4,  // 3: test.EqualProto.map_int64_bool:type_name -> test.EqualProto.MapInt64BoolEntry
	5,  // 4: test.EqualProto.map_int64_int64:type_name -> test.EqualProto.MapInt64Int64Entry
	6,  // 5: test.EqualProto.map_int64_bytes:type_name -> test.EqualProto.MapInt64BytesEntry
	7,  // 6: test.EqualProto.map_sint32_sint64:type_name -> test.EqualProto.MapSint32Sint64Entry
	8,  // 7: test.EqualProto.map_sint64_sint32:type_name -> test.EqualProto.MapSint64Sint32Entry
	9,  // 8: test.EqualProto.map_fixed32_sfixed64:type_name -> test.EqualProto.MapFixed32Sfixed64Entry
	10, // 9: test.EqualProto.map_sfixed32_fixed64:type_name -> test.EqualProto.MapSfixed32Fixed64Entry
	11, // 10: test.EqualProto.map_string_bool:type_name -> test.EqualProto.MapStringBoolEntry
	12, // 11: test.EqualProto.map_string_int32:type_name -> test.EqualProto.MapStringInt32Entry
	13, // 12: test.EqualProto.map_string_int64:type_name -> test.EqualProto.MapStringInt64Entry
	14, // 13: test.EqualProto.map_string_sint64:type_name -> test.EqualProto.MapStringSint64Entry
	15, // 14: test.EqualProto.map_string_sfixed64:type_name -> test.EqualProto.MapStringSfixed64Entry
	16, // 15: test.EqualProto.map_string_string:type_name -> test.EqualProto.MapStringStringEntry
	17, // 16: test.EqualProto.map_string_enum:type_name -> test.EqualProto.MapStringEnumEntry
	21, // 17: test.EqualProto.m_actor:type_name -> test.OtherMessage
	21, // 18: test.EqualProto.arr_actor:type_name -> test.OtherMessage
	18, // 19: test.EqualProto.map_string_actor:type_name -> test.EqualProto.MapStringActorEntry
	19, // 20: test.EqualProto.map_int32_actor:type_name -> test.EqualProto.MapInt32ActorEntry
	20, // 21: test.EqualProto.map_int64_actor:type_name -> test.EqualProto.MapInt64ActorEntry
	22, // 22: test.EqualProto.outer:type_name -> pb.OuterMsg
	23, // 23: test.EqualProto.nofase:type_name -> pb.NoFastMessage
	23, // 24: test.EqualProto.nofasts:type_name -> pb.NoFastMessage
	24, // 25: test.EqualProto.last_updated:type_name -> google.protobuf.Timestamp
	25, // 26: test.EqualProto.MapStringEnumEntry.value:type_name -> test.TestEnum
	21, // 27: test.EqualProto.MapStringActorEntry.value:type_name -> test.OtherMessage
	21, // 28: test.EqualProto.MapInt32ActorEntry.value:type_name -> test.OtherMessage
	21, // 29: test.EqualProto.MapInt64ActorEntry.value:type_name -> test.OtherMessage
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_test_equaler_proto_init() }
func file_test_equaler_proto_init() {
	if File_test_equaler_proto != nil {
		return
	}
	file_test_msg_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_test_equaler_proto_rawDesc), len(file_test_equaler_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_equaler_proto_goTypes,
		DependencyIndexes: file_test_equaler_proto_depIdxs,
		MessageInfos:      file_test_equaler_proto_msgTypes,
	}.Build()
	File_test_equaler_proto = out.File
	file_test_equaler_proto_goTypes = nil
	file_test_equaler_proto_depIdxs = nil
}
